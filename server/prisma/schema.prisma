// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ERol {
  Admin
  Adulto
  Voluntario
  Socio
}

enum EEstado {
  ACTIVO
  INACTIVO
}

enum ETipoActividad {
  Pintar
  Cognitivo
  Baile
  Quiting
  Generales
}

enum ECategoria {
  Medicinas
  Materiales
  ActivosFijos
}

enum EMovimientoInventario {
  ADD
  DELETE
}

/////////////////////
// Tablas principales
/////////////////////

model Usuario {
  id                 String              @id @default(cuid())
  nombre_usuario     String              @db.VarChar(191)
  correo             String              @unique @db.VarChar(191)
  contrasenia        String
  ultimo_inicio_sesion DateTime?

  // Relaciones
  historialInventario HistorialInventario[]
  actas               Actas[]

  @@index([nombre_usuario])
}

model Perfiles {
  id               String     @id @default(cuid())
  nombre           String
  fechaNacimiento  DateTime
  cedula           String     @unique @db.VarChar(191)
  rol              ERol
  fotoURL          String?
  telefonoContacto String?
  numeroCelular    String?
  direccion        String?
  estado           EEstado    @default(ACTIVO)

  // Relaciones
  actividades      ActividadPerfil[]
  actas            ActaPerfil[]

  @@index([rol])
  @@index([estado])
}

model Actividad {
  id             String             @id @default(cuid())
  nombre         String
  fechaActividad DateTime
  horaInicio     DateTime
  duracion       Int                // minutos
  tipoActividad  ETipoActividad

  // Relaciones
  perfiles       ActividadPerfil[]
  inventarios    InventarioActividad[]

  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @updatedAt

  @@index([fechaActividad])
  @@index([tipoActividad])
}

model Inventario {
  id          String      @id @default(cuid())
  idCategoria ECategoria
  Nombre      String
  descripcion String?
  stock       Int         @default(0)
  estado      EEstado     @default(ACTIVO)

  // Relaciones
  historial   HistorialInventario[]
  actividades InventarioActividad[]

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([idCategoria])
  @@index([estado])
  @@index([Nombre])
}

model HistorialInventario {
  id           String                 @id @default(cuid())
  idInventario String
  idUsuario    String
  fecha        DateTime               @default(now())
  descripcion  String?
  tipoMovimiento EMovimientoInventario

  inventario   Inventario             @relation(fields: [idInventario], references: [id], onDelete: Cascade)
  usuario      Usuario                @relation(fields: [idUsuario], references: [id], onDelete: Restrict)

  @@index([idInventario, fecha])
  @@index([idUsuario])
}

model Actas {
  id        String   @id @default(cuid())
  URL       String
  idUsuario String
  fecha     DateTime @default(now())

  usuario   Usuario  @relation(fields: [idUsuario], references: [id], onDelete: Restrict)
  perfiles  ActaPerfil[]

  @@index([fecha])
}

/////////////////////
// Tablas de relaci√≥n N:M
/////////////////////

model ActividadPerfil {
  id          String    @id @default(cuid())
  idPerfil    String
  idActividad String

  perfil      Perfiles  @relation(fields: [idPerfil], references: [id], onDelete: Cascade)
  actividad   Actividad @relation(fields: [idActividad], references: [id], onDelete: Cascade)

  @@unique([idPerfil, idActividad])
  @@index([idActividad])
}

model InventarioActividad {
  id          String     @id @default(cuid())
  idInventario String
  idActividad String

  inventario  Inventario @relation(fields: [idInventario], references: [id], onDelete: Cascade)
  actividad   Actividad  @relation(fields: [idActividad], references: [id], onDelete: Cascade)

  @@unique([idInventario, idActividad])
  @@index([idActividad])
}

model ActaPerfil {
  id        String   @id @default(cuid())
  idActa    String
  idPerfiles String

  acta      Actas    @relation(fields: [idActa], references: [id], onDelete: Cascade)
  perfil    Perfiles @relation(fields: [idPerfiles], references: [id], onDelete: Cascade)

  @@unique([idActa, idPerfiles])
  @@index([idPerfiles])
}